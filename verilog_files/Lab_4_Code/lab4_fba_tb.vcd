$date
	Tue Jul 13 13:49:19 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module lab4_fba_tb $end
$var wire 4 ! S [3:0] $end
$var wire 1 " Cout $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % Cin $end
$scope module uut $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % Cin $end
$var wire 4 ( carry [3:0] $end
$var wire 4 ) S [3:0] $end
$var wire 1 " Cout $end
$scope module FA1 $end
$var wire 1 * A $end
$var wire 1 + B $end
$var wire 1 % Cin $end
$var reg 1 , Cout $end
$var reg 1 - Sum $end
$var reg 1 . T1 $end
$var reg 1 / T2 $end
$var reg 1 0 T3 $end
$upscope $end
$scope module FA2 $end
$var wire 1 1 A $end
$var wire 1 2 B $end
$var wire 1 3 Cin $end
$var reg 1 4 Cout $end
$var reg 1 5 Sum $end
$var reg 1 6 T1 $end
$var reg 1 7 T2 $end
$var reg 1 8 T3 $end
$upscope $end
$scope module FA3 $end
$var wire 1 9 A $end
$var wire 1 : B $end
$var wire 1 ; Cin $end
$var reg 1 < Cout $end
$var reg 1 = Sum $end
$var reg 1 > T1 $end
$var reg 1 ? T2 $end
$var reg 1 @ T3 $end
$upscope $end
$scope module FA4 $end
$var wire 1 A A $end
$var wire 1 B B $end
$var wire 1 C Cin $end
$var reg 1 " Cout $end
$var reg 1 D Sum $end
$var reg 1 E T1 $end
$var reg 1 F T2 $end
$var reg 1 G T3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1G
0F
0E
0D
0C
1B
1A
0@
0?
0>
1=
0<
0;
1:
09
08
07
06
05
04
03
02
01
00
0/
0.
1-
0,
0+
1*
b101 )
bz000 (
b1100 '
b1001 &
0%
b1100 $
b1001 #
1"
b101 !
$end
#20
15
13
bz001 (
1,
10
0-
0"
0G
b1110 !
b1110 )
1D
1+
0:
19
0A
b1001 $
b1001 '
b101 #
b101 &
#40
